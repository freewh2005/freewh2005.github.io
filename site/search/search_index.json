{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"home/","title":"Blog Construction","text":""},{"location":"OI/lca/","title":"lca","text":"<p>\u500d\u589e\u6c42lca</p> <pre><code>int lca(int u,int v){\n    if(dep[u]&lt;dep[v]) swap(u,v);\n    for(int i=20;i&gt;=0;i--) if(dep[f[u][i]]&gt;=dep[v]) u=f[u][i];\n    if(u==v) return u;\n    for(int i=20;i&gt;=0;i--) if(f[u][i]!=f[v][i]) u=f[u][i],v=f[v][i];\n    return f[u][0];\n}\n\n</code></pre> <p>tarjan\u6c42lca</p> <p>\u901a\u8fc7\u5e76\u67e5\u96c6\u7684\u601d\u60f3\uff0c\u6765\u786e\u5b9a lca \u3002</p> <p>\u6bcf\u6b21\u8fdb\u5165\u4e00\u68f5\u5b50\u6811\uff0c\u628a f \u503c\u8d4b\u4e3a\u81ea\u5df1\uff0c\u51fa\u53bb\u7684\u65f6\u5019 f \u503c\u8d4b\u4e3a\u81ea\u5df1\u7684\u7236\u4eb2\u3002</p> <p>\u5982\u679c\u641c\u5230\u4e00\u4e2a\u5c5e\u4e8e\u4e00\u6b21\u8be2\u95ee\u7684\u70b9 $u$\uff0c\u4e14\u53e6\u4e00\u4e2a\u70b9 $v$ \u5df2\u7ecf\u88ab\u641c\u8fc7\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684 lca \u5c31\u662f $v$ \u901a\u8fc7\u5e76\u67e5\u96c6 f \u6240\u80fd\u56de\u6eaf\u5230\u7684\u6700\u9ad8\u70b9\uff08\u7ec6\u54c1\uff09\uff0c\u5373 find(v)\u3002</p> <pre><code>void dfs(int u,int fa){\n    dep[u]=dep[fa]+1,f[u]=u;\n    for(int i=head[u];i!=-1;i=g[i].nxt){\n        int v=g[i].to;if(v==fa) continue;\n        dfs(v,u);f[v]=u;\n    }\n    for(int i=head_quest[u];i!=-1;i=g[i].nxt){\n        int it=g[i].to;int v=(q[it].l==u?q[it].r:q[it].l);\n        if(f[v]&amp;&amp;!q[it].tag){\n            int lca=find(v);\n        }\n    }\n}\n\n</code></pre> <p>\u6811\u5256\u6c42lca</p> <p>\u6700\u666e\u901a\u7684\u6811\u5256\uff08\u8131\u53bb\u4e86\u6240\u6709\u7684\u5916\u58f3$O(n\\log n)$\uff09</p> <pre><code>int siz[N],top[N],dep[N],son[N],pa[N];\nvoid dfs(int u,int fa){\n    siz[u]=1,dep[u]=dep[fa]+1,pa[u]=fa;\n    for(re int i=head[u];i!=-1;i=g[i].nxt){\n        int v=g[i].to;if(v==fa) continue;\n        dfs(v,u);siz[u]+=siz[v];\n        if(siz[v]&gt;siz[son[u]]) son[u]=v;\n    }\n}\nvoid dfs2(int u,int fa,int topf){\n    top[u]=topf;\n    if(son[u]) dfs2(son[u],u,topf);\n    for(re int i=head[u];i!=-1;i=g[i].nxt){\n        int v=g[i].to;if(v==fa||v==son[u]) continue;\n        dfs2(v,u,v);\n    }\n    return ;\n}\nint lca(int x,int y){\n    while(top[x]!=top[y]){\n        if(dep[top[x]]&lt;dep[top[y]]) swap(x,y);\n        x=pa[top[x]];\n    }\n    if(dep[x]&gt;dep[y]) swap(x,y);\n    return x;\n}\n</code></pre> <p>dfn\u5e8f\u6c42lca</p> <p>\u5495\u5495\u5495\u3002\uff08\u4e86\u89e3\uff0c\u4f46\u662f\u57fa\u672c\u6ca1\u6572\u8fc7\uff0c\u4e0d\u5e38\u7528\uff09</p>"}]}